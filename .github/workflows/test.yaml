# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Test fake_cpp_project

on:
  workflow_dispatch:
    inputs:
      gitBranch:
        description: 'The git branch to test'
        required: false
        default: 'main'
        type: string
      container_id:
        description: "The github run ID from build.yaml"
        required: true

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  GENERATOR: Ninja

jobs:
  test:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: [self-hosted, MacOS, ARM64]

    steps:
    - uses: actions/checkout@v4

    - name: Check System Requirements
      run: |
        echo "N/A"

    - name: Test
      run: |
        docker exec -w /project -d fake_cpp_project-container-${{ inputs.container_id }} sh -c "ctest --test-dir build --config ${{env.BUILD_TYPE}}"

    - name: Request Deployment of fake_cpp_project
      run: |
        echo "Requesting deployment of fake_cpp_project ..."
        TARGET_REPO="ei06125/fake_cpp_project"
        WORKFLOW_ID="deploy.yaml"
        GITHUB_TOKEN="${{ secrets.PERSONAL_ACCESS_TOKEN }}"
        API_URL="https://api.github.com/repos/$TARGET_REPO/actions/workflows/$WORKFLOW_ID/dispatches"
        # Trigger the workflow (customize ref and inputs as needed)
        curl -X POST $API_URL \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          --data '{"ref":"${{ inputs.gitBranch }}", "inputs":{"gitBranch":"${{ github.event.pull_request.head.ref }}", "container_id":"${{ github.run_id }}"}}'
